[
  [
    1,
    " - einstein_v2(\" mediate0[N0, N1, N2, N3] = input0[0] where N0 in 64, N1 in 12, N2 in 128, N3 in 128;  mediate1[B0, B1, N, M] +=! input1[B0, B1, N, K] * input2[B0, B1, K, M]; output0[N0, N1, N2, N3] = mediate1[N0, N1, N2, N3] / mediate0[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [64, 12, 128, 64]} ,  \"input2\" : { \"dtype\" : \"float32\", \"shape\" : [64, 12, 64, 128]} }) ## @:  ",
    "BatchMatMul_Broadcast_Divide",
    [
      [
        100,
        0
      ],
      [
        101,
        0
      ],
      [
        102,
        0
      ]
    ]
  ],
  [
    2,
    " - einstein_v2(\" mediate0[N0, N1] = input0[N0, 0, 0, N1] ;   mediate1[N0, N1, N2, N3] = mediate0[N0, N3] where N1 in 12, N2 in 128;  output0[N0, N1, N2, N3] = input1[N0, N1, N2, N3] + mediate1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [64, 1, 1, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [64, 12, 128, 128]} }) ## @:  ",
    "Reshape_Broadcast_Add",
    [
      [
        103,
        0
      ],
      [
        1,
        0
      ]
    ]
  ],
  [
    3,
    " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [64, 12, 128, 128]} })  ",
    "SoftmaxBasic",
    [
      [
        2,
        0
      ]
    ]
  ],
  [
    4,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [64, 12, 128, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [64, 12, 128]} })  ",
    "SoftmaxBasic",
    [
      [
        2,
        0
      ],
      [
        3,
        0
      ]
    ]
  ],
  [
    5,
    " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [64, 12, 128, 128]} })  ",
    "SoftmaxBasic",
    [
      [
        4,
        0
      ]
    ]
  ],
  [
    6,
    " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [64, 12, 128, 128]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [64, 12, 128]} })  ",
    "SoftmaxBasic",
    [
      [
        4,
        0
      ],
      [
        5,
        0
      ]
    ]
  ],
  [
    7,
    "",
    "Result",
    [
      [
        6,
        0
      ]
    ]
  ]
]
